[
       {
              "name": "Event handlers",
              "isActive": "yes",
              "script": "",
              "isFolder": "no"
       },
       {
              "name": "UI Settings",
              "isActive": "yes",
              "script": "",
              "isFolder": "no"
       },
       {
              "name": "Install-Login-Exit",
              "isActive": "yes",
              "script": "function ui.connected()\n  ui = ui or {} \nend\n\n\nfunction ui.justLoggedIn()\n  tempTimer(10, [[ ui.checkForUpdate() ]])\nend\n\nfunction ui.profileLoaded()\n  \n  -------------[ Load any saved tables into the name space ]-------------\n  \n  -- Load saved settings if any\n  if io.exists(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.settings.lua\") then\n    table.load(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.settings.lua\", ui.settings) -- using / is OK on Windows too.\n    ui.displayUIMessage(\"Settings Table Loaded\")\n    else\n    -- If we don't find any saved settings load the standard settings\n    ui.createSettings()\n  end  \n\n  -- Load the known rooms table\n  if io.exists(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.knownRooms.lua\") then\n    table.load(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.knownRooms.lua\", ui.knownRooms) -- using / is OK on Windows too.\n    ui.displayUIMessage(\"Known rooms loaded\")\n  end\n    \n  -- Load the rooms notes\n  if io.exists(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.roomNotes.lua\") then\n    table.load(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.roomNotes.lua\", ui.roomNotes) -- using / is OK on Windows too.\n    ui.displayUIMessage(\"Room notes loaded\")\n  end\n  -- Check if we have a crowd map version downloaded\n  \n  -- Crowmap has been disabled currently.\n  \n  --if io.exists(getMudletHomeDir()..\"/map downloads/current\") then\n  --  ui.crowdmapVersionFile = io.open(getMudletHomeDir()..\"/map downloads/current\",r) -- using / is OK on Windows too.\n  --  ui.crowdmapVersion = ui.crowdmapVersionFile:read(\"*number\")\n  --end\n\n  ui.displayUIMessage(\"Initializing UI\")\n  ui.createContainers(\"startup\")\n  \n  if ui.postInstallDone then\n    expandAlias(\"ui\", false)\n    ui.postInstallDone = false\n  end\n\nend\n\n\nfunction ui.saveOnExit()\n  ui.displayUIMessage(\"Saving UI tables\")\n  table.save(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.settings.lua\", ui.settings)\n  table.save(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.knownRooms.lua\", ui.knownRooms)\n  table.save(getMudletHomeDir()..\"/\"..ui.packageName..\"/ui.roomNotes.lua\", ui.roomNotes)\nend\n\nfunction ui.postInstallHandling(_, package)\n\n  if package == \"mudlet-mapper_custom\" then\n    mmp = mmp or {}\n    raiseEvent(\"mmp logged in\", \"gomud\")\n    mmp.game = \"gomud\"\n    mmp.echo(\"We're connected to GoMud.\")\n  end\n  \n  if package == \"GoMudUI\" then\n   \n    --Check if the generic_mapper package is installed and if so uninstall it\n    if table.contains(getPackages(),\"generic_mapper\") then\n      ui.displayUIMessage(\"Now removing standard mapping script\")\n      if map.registeredEvents then -- Prevent the generic mapper script from showing confusing information\n        for _,id in ipairs(map.registeredEvents) do\n              killAnonymousEventHandler(id)\n        end\n      end\n      tempTimer(1, function() uninstallPackage(\"generic_mapper\") end)\n    end\n  \n    -- Options for pre-relase versions:\n    if string.find(ui.version, \"pre\") then\n      ui.displayUIMessage(\"This is a pre-release version. Version is: \"..ui.version)\n      ui.profileLoaded()\n      ui.connected()\n    end\n    --ui.createContainers(\"startup\")\n        \n    -- Check if there is a map loaded already\n    if table.is_empty(getRooms()) then\n      -- there is no map loaded, but if you want a secondary doublecheck\n      if table.size(getAreaTable()) == 1 then\n      -- only has the defaultarea, and no rooms, so there's definitely no map loaded\n      ui.displayUIMessage(\"No map loaded\")\n      --ui.displayUIMessage(\"Use 'mconfig crowdmap on' to use the crowd map\")\n      end\n    end\n    \n    -- Install IRE mapping script  \n    if not table.contains(getPackages(),\"mudlet-mapper_custom\") then\n      ui.displayUIMessage(\"Now installing custom mapper script\")\n      tempTimer(1, function() installPackage(\"https://play.gomudmud.com/static/website/ui/mudlet-mapper_custom.mpackage\") end)\n    end\n    \n    ui.postInstallDone = true\n    \n    if not ui.isUpdating then\n      ui.profileLoaded()\n    end\n    ui.updateTopBar()\n  end\n  \nend\n\nfunction ui.unInstall(_, package)\n  \n  if package == \"GoMudUI\" and not ui.isUpdating then\n    ui.displayUIMessage(\"Cleaning up - removing the UI mapper\")\n    uninstallPackage(\"mudlet-mapper_custom\")\n    \n    ui.displayUIMessage(\"Re-installing the generic mapper\")\n    if not table.contains(getPackages(),\"generic_mapper\") then\n      tempTimer(1, function() installPackage(\"https://raw.githubusercontent.com/Mudlet/Mudlet/development/src/mudlet-lua/lua/generic-mapper/generic_mapper.xml\") end)\n    end\n    \n    ui.displayUIMessage(\"Removing windows and resetting borders\")\n    ui.left:hide()\n    ui.right:hide()\n    ui.bottom:hide()\n    ui.top:hide()\n    \n    setBorderBottom(0)\n    setBorderTop(0)\n    setBorderLeft(0)\n    setBorderRight(0)\n    setFont(\"main\", \"Bitstream Vera Sans Mono\")\n    \n    tempTimer(3, function() resetProfile() end)\n  end\nend",
              "isFolder": "no"
       },
       {
              "name": "UI Containers",
              "isActive": "yes",
              "script": "",
              "isFolder": "yes"
       },
       {
              "name": "Update Container Info",
              "isActive": "yes",
              "script": "",
              "isFolder": "yes"
       },
       {
              "name": "Core Functions",
              "isActive": "yes",
              "script": "",
              "isFolder": "yes"
       },
       {
              "name": "Informational",
              "isActive": "yes",
              "script": "",
              "isFolder": "yes"
       }
]